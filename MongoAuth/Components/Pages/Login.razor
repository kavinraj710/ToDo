@page "/login"
@inherits UserContext
@rendermode InteractiveServer

<AuthorizeView>
    <Authorized>
        @{
            AutoNavigate();
        }
    </Authorized>
    <Authorizing>
        <div class="loading-container">
            <div class="spinner"></div>
            <h2>Please Wait...</h2>
        </div>
    </Authorizing>
    <NotAuthorized>
        <div class="login-container">
            <div class="login-card">
                <h2 class="login-title">🔐 Welcome Back!</h2>
                <p class="login-subtitle">Sign in to continue</p>
                <div class="form-group">
                    <label>Email</label>
                    <input type="email" @bind="Email" required placeholder="Enter your email" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input type="password" @bind="Password" required placeholder="Enter your password" />
                </div>
                <div class="login-actions">
                    <button class="secondary-btn" @onclick="NavigateToRegister">New? Register</button>
                    <button class="primary-btn" @onclick="HandleLogin">Login</button>
                </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

<style>
    /* Background */
    body {
        
        background-size: cover;
        font-family: 'Poppins', sans-serif;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    /* Center the login container */
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100vh;
    }

    /* Glassmorphism Login Card */
    .login-card {
        background: rgba(0, 122, 153, 0.9); /* Dark Cyan */
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        width: 400px;
        text-align: center;
      
        border: 1px solid rgba(255, 255, 255, 0.3);
        transition: 0.3s ease-in-out;
    }

    /* Title */
    .login-title {
        font-size: 28px;
        font-weight: 600;
        margin-bottom: 5px;
        color: #ffd700; /* Tertiary Golden Yellow */
    }

    .login-subtitle {
        font-size: 16px;
        color: #afeeee; /* Primary color */
        margin-bottom: 20px;
    }

    /* Form group */
    .form-group {
        text-align: left;
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            font-size: 14px;
            margin-bottom: 5px;
            color: #afeeee; /* Primary color */
        }

        .form-group input {
            width: 100%;
            padding: 10px;
            border-radius: 6px;
            border: 1px solid rgba(255, 255, 255, 0.3);
            font-size: 16px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            transition: 0.3s;
        }

            .form-group input:focus {
                border-color: #ffd700;
                outline: none;
            }

    /* Buttons */
    .login-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    .primary-btn, .secondary-btn {
        padding: 12px;
        border-radius: 8px;
        font-size: 16px;
        cursor: pointer;
        border: none;
        transition: all 0.3s;
        width: 48%;
        text-align: center;
        font-weight: bold;
    }

    .primary-btn {
        background: #afeeee; /* Primary color */
        color: #007a99;
    }

        .primary-btn:hover {
            background: #97d5d5;
            transform: scale(1.05);
        }

    .secondary-btn {
        background: rgba(255, 255, 255, 0.3);
        color: white;
    }

        .secondary-btn:hover {
            background: rgba(255, 255, 255, 0.5);
            transform: scale(1.05);
        }

    /* Loading screen */
    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
    }

    .spinner {
        width: 50px;
        height: 50px;
        border: 5px solid rgba(255, 255, 255, 0.3);
        border-top: 5px solid white;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    keyframes spin {
        from

    {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }

    }</style>

@code {
    [SupplyParameterFromQuery(Name = "ReturnUrl")]
    public string ReturnUrlPath { get; set; } = "";

    private string Email { get; set; } = "";
    private string Password { get; set; } = "";

    public void AutoNavigate()
    {
        if (string.IsNullOrEmpty(ReturnUrlPath))
        {
            NavTo("/");
        }
        else
        {
            NavTo(ReturnUrlPath);
        }
    }

    public async void HandleLogin()
    {
        if (string.IsNullOrWhiteSpace(Email) || string.IsNullOrWhiteSpace(Password))
        {
            Console.WriteLine("Email and Password are required!");
            return;
        }

        if (await Login(Email, Password))
        {
            AutoNavigate();
        }
        else
        {
            Console.WriteLine("Invalid email or password. Try again!");
        }
    }

    public void NavigateToRegister()
    {
        NavTo("/register");
    }
}
